#include <iostream>
#include <vector>
using namespace std;
// [left,right]即左闭右闭的情况
class Solution1 {
public:
    int search1(vector<int>& nums, int target) {
        int left = 0;
        int right =nums.size() - 1;//定义target在左闭有右闭的区间里，[left,right]
        while (left <= right) {  //因为是左右闭区间，所以left == right 是有意义的
            int middle = left + ((right-left) / 2);
            if(nums[middle] > target) {
                right = middle - 1;
            } else if (nums[middle] < target) {
                left = middle + 1;
            } else {// nums[middle] == target
                return middle;
            }
        }
        // 未找到目标值
        return -1;
    }
};

// [left,right)
class Solution2 {
public:
    int search2(vector<int>& nums, int target) {
        int left = 0;
        int right = nums.size();//定义target在左闭右开的区间里，即[left,right)
        while (left < right) {
            int middle = left + ((right - left) >> 1);//位运算符 >> 右移操作，右移相当于除2
            if (nums[middle] > target) {
                right = middle;
            } else if (nums[middle] < target) {
                left = middle + 1; //target在右区间 [left,right)中
            } else {//nums[middle] == target
                return middle;
            }
        }
        //未找到目标
        return -1;
    }
};
int main()
{
    vector<int> vec;
    vec.push_back(1);
    vec.push_back(2);
    vec.push_back(3);
    vec.push_back(4);
    vec.push_back(6);
    vec.push_back(7);
    vec.push_back(9);
    vec.push_back(12);

    Solution1 s1;
    Solution2 s2;
    cout<<"初始vector内容如下"<<endl;
    vector<int>::iterator it;
    for (it = vec.begin(); it != vec.end(); it++)
        cout << *it <<' ';
    cout<<endl;
    cout<<"二分法[left,right]方法寻找 9 的位置为："<<s1.search1(vec,9)<<endl;
    cout<<"二分法[left,right)方法寻找 12 的位置为："<<s2.search2(vec,12)<<endl;
    return 0;
}
