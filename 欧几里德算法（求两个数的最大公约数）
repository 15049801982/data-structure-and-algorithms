public static int gcd(int p,int q)
{
  if(q==0) return p;
  int r=p%q;
  return gcd(q,r); //递归算法
}
int lcm=p*q/gcd(p,q);

//最大公约数：greatest common divisor(gcd)
//最小公倍数：lowest/least common multiple(lcm)
算法描述：
  计算两个非负整数p和q的最大公倍数，若q是0，则最大公约数为p.否则，将p除以q得到余数r，p和q的最大公约数即为q和r的最大公约数。
  （求最小公倍数只需将 p*q/最大公约数 即可）
